{
  "fileName": "ReceiptBuilder.cs",
  "filePath": "src/Nethermind/Nethermind.Core.Test/Builders/ReceiptBuilder.cs",
  "url": "https://github.com/nethermindeth/nethermind/Nethermind.Core.Test/Builders/ReceiptBuilder.cs",
  "summary": "The `ReceiptBuilder` class is a builder for creating instances of the `TxReceipt` class. The `TxReceipt` class represents the receipt of a transaction on the Ethereum blockchain. The receipt contains information about the transaction, such as the amount of gas used, the sender and recipient addresses, and any logs generated by the transaction.\n\nThe `ReceiptBuilder` class provides methods for setting the various fields of the `TxReceipt` class. These methods allow the user to set the transaction hash, block number, block hash, gas used, sender and recipient addresses, contract address, error message, and status code. The builder also provides a method for setting the logs generated by the transaction.\n\nThe `ReceiptBuilder` class is useful for testing purposes, as it allows developers to easily create instances of the `TxReceipt` class with specific fields set to specific values. For example, a developer could use the `WithAllFieldsFilled` method to create a `TxReceipt` instance with all fields set to non-default values. This can be useful for testing the behavior of code that interacts with `TxReceipt` instances.\n\nHere is an example of how the `ReceiptBuilder` class could be used to create a `TxReceipt` instance:\n\n```\nvar receipt = new ReceiptBuilder()\n    .WithSender(senderAddress)\n    .WithRecipient(recipientAddress)\n    .WithGasUsed(100000)\n    .WithTransactionHash(transactionHash)\n    .WithBlockNumber(blockNumber)\n    .WithBlockHash(blockHash)\n    .WithStatusCode(0)\n    .WithLogs(logEntry1, logEntry2)\n    .Build();\n```\n\nThis code creates a new `ReceiptBuilder` instance and sets various fields of the `TxReceipt` instance using the builder's methods. Finally, the `Build` method is called to create the `TxReceipt` instance.",
  "questions": "1. What is the purpose of the `ReceiptBuilder` class?\n    \n    The `ReceiptBuilder` class is a builder class for creating instances of `TxReceipt` objects, which represent the receipt of a transaction on the blockchain.\n\n2. What is the purpose of the `WithAllFieldsFilled` property?\n    \n    The `WithAllFieldsFilled` property is a convenience property that sets all the fields of the `TxReceipt` object to non-default values for testing purposes.\n\n3. What is the purpose of the `WithCalculatedBloom` method?\n    \n    The `WithCalculatedBloom` method calculates the bloom filter for the `TxReceipt` object based on its log entries.",
  "checksum": "2f43abb5791aacd959aea735ba1c4e80"
}