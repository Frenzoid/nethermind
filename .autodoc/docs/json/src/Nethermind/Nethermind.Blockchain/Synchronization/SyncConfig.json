{
  "fileName": "SyncConfig.cs",
  "filePath": "src/Nethermind/Nethermind.Blockchain/Synchronization/SyncConfig.cs",
  "url": "https://github.com/nethermindeth/nethermind/Nethermind.Blockchain/Synchronization/SyncConfig.cs",
  "summary": "The `SyncConfig` class is a configuration class for synchronization modes in the Nethermind blockchain project. It provides a set of properties that can be used to configure the synchronization process. \n\nThe class has several static properties that provide pre-configured instances of the `ISyncConfig` interface. These properties include `Default`, `WithFullSyncOnly`, `WithFastSync`, `WithFastBlocks`, and `WithEth2Merge`. These properties can be used to quickly configure the synchronization process without having to manually set each property.\n\nThe `SyncConfig` class has several properties that can be used to configure the synchronization process. These properties include `NetworkingEnabled`, `SynchronizationEnabled`, `FastSyncCatchUpHeightDelta`, `FastBlocks`, `UseGethLimitsInFastBlocks`, `FastSync`, `DownloadHeadersInFastSync`, `DownloadBodiesInFastSync`, `DownloadReceiptsInFastSync`, `AncientBodiesBarrier`, `AncientReceiptsBarrier`, `PivotTotalDifficulty`, `PivotNumber`, `PivotHash`, `WitnessProtocolEnabled`, `SnapSync`, `SnapSyncAccountRangePartitionCount`, `FixReceipts`, `FixTotalDifficulty`, `FixTotalDifficultyStartingBlock`, `FixTotalDifficultyLastBlock`, `StrictMode`, `BlockGossipEnabled`, `NonValidatorNode`, and `TuneDbMode`.\n\nThe `SyncConfig` class also overrides the `ToString()` method to provide a string representation of the configuration. This can be useful for debugging and logging purposes.\n\nOverall, the `SyncConfig` class provides a flexible and configurable way to set synchronization modes in the Nethermind blockchain project. Developers can use the pre-configured static properties or manually set the properties to customize the synchronization process to their needs.",
  "questions": "1. What is the purpose of the `SyncConfig` class?\n    \n    The `SyncConfig` class is used to configure synchronization modes for the Nethermind blockchain.\n\n2. What are some of the properties that can be set using `SyncConfig`?\n\n    Some of the properties that can be set using `SyncConfig` include `FastSync`, `FastBlocks`, `DownloadHeadersInFastSync`, `DownloadBodiesInFastSync`, `DownloadReceiptsInFastSync`, `AncientBodiesBarrier`, `AncientReceiptsBarrier`, `PivotNumber`, `WitnessProtocolEnabled`, `SnapSync`, `FixReceipts`, `FixTotalDifficulty`, `StrictMode`, `BlockGossipEnabled`, `NonValidatorNode`, and `TuneDbMode`.\n\n3. What is the purpose of the `ConfigCategory` attribute applied to the `SyncConfig` class?\n\n    The `ConfigCategory` attribute is used to provide a description of the configuration category for the `SyncConfig` class.",
  "checksum": "ba38f6538244ba357b72fe67bb1c048a"
}