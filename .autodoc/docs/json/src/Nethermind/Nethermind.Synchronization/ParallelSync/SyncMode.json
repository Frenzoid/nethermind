{
  "fileName": "SyncMode.cs",
  "filePath": "src/Nethermind/Nethermind.Synchronization/ParallelSync/SyncMode.cs",
  "url": "https://github.com/nethermindeth/nethermind/Nethermind.Synchronization/ParallelSync/SyncMode.cs",
  "summary": "This code defines an enum called `SyncMode` and an extension method for it. The `SyncMode` enum is used to represent the different synchronization modes that can be used in the Nethermind project. Each mode is represented by a flag value, which is a power of 2. The different modes are:\n\n- `None`: represents no synchronization mode.\n- `WaitingForBlock`: represents a mode where the node is connected to other nodes and is waiting for new blocks to be discovered.\n- `Disconnected`: represents a mode where the node is not connected to any other nodes.\n- `FastBlocks`: represents a mode where the node is performing a fast sync by downloading headers, bodies, or receipts from a pivot block to the beginning of the chain in parallel.\n- `FastSync`: represents a mode where the node is performing a standard fast sync before the peers head - 32 (threshold). This happens after the fast blocks finish downloading from the pivot downwards.\n- `StateNodes`: represents a mode where the node is downloading all the trie nodes during fast sync. The node can switch between `StateNodes` and `FastSync` while catching up with the head - 32 due to peers not returning old trie nodes.\n- `Full`: represents a mode where the node is performing a full archive sync from genesis or a full sync after `StateNodes` finish.\n- `DbLoad`: represents a mode where the node is loading previously downloaded blocks from the database.\n- `FastHeaders`: represents a mode where the node is downloading headers in parallel during fast sync.\n- `FastBodies`: represents a mode where the node is downloading bodies in parallel during fast sync.\n- `FastReceipts`: represents a mode where the node is downloading receipts in parallel during fast sync.\n- `SnapSync`: represents a mode where the node is downloading state during snap sync (accounts, storages, code, proofs).\n- `BeaconHeaders`: represents a mode where the node is performing a reverse download of headers from the beacon pivot to genesis.\n- `All`: represents all synchronization modes.\n\nThe `SyncModeExtensions` class defines an extension method called `NotSyncing` that returns `true` if the `SyncMode` is either `WaitingForBlock` or `Disconnected`. This method can be used to check if the node is currently syncing or not.\n\nOverall, this code provides a way to represent and manage different synchronization modes in the Nethermind project. It allows for flexibility in how the node can sync with the network and provides a way to check the current sync mode.",
  "questions": "1. What is the purpose of the `SyncMode` enum?\n    \n    The `SyncMode` enum is used to represent the different synchronization modes that can be used in the Nethermind project, such as fast sync, full sync, and snap sync.\n\n2. What is the `NotSyncing` extension method used for?\n    \n    The `NotSyncing` extension method is used to check if the current `SyncMode` is either `WaitingForBlock` or `Disconnected`, which indicates that the node is not currently syncing.\n\n3. What is the purpose of the `All` value in the `SyncMode` enum?\n    \n    The `All` value in the `SyncMode` enum is used to represent all possible synchronization modes, and is a combination of all the other values in the enum using the bitwise OR operator.",
  "checksum": "cead4b731cdbcfd081919b9410ec02e0"
}